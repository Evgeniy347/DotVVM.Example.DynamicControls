@viewModel WSSC.V4.SYS.DotVVMReference.Examples.ViewModels.Example_7_RenderControlViewModel, WSSC.V4.SYS.DotVVMReference,Version=4.0.0.0,Culture=neutral,PublicKeyToken=9f4da00116c38ec5
@masterPage Examples/Views/Site.dotmaster

<dot:Content ContentPlaceHolderID="MainContent">
    <table border="1" cellspacing="0" cellpadding="5">
        <tr>
            <td colspan="2" style="width: 500px;">
                7. Сделать контрол аналог наследника класса System.Web.UI.Control для генерации разметки и её возврата в управляющий код. Это будет использоваться как при построении отчётов, так и при формировании разметки журнала действий конфигурации. То чем пользовались раньше - это метод Control.Render(HtmlTextWriter writer), в котором рендерились, например, объекты таблиц экземпляров Table, вложенных в них TableCell, TableRow и других вложенных контролов вместе с указанным для них атрибутами.
                <br>
                <br>
                8. Сделать аналог ashx-хэндлера для выполнения аякс-запроса, сделать страницу с кнопкой, по которой через аякс запрос возвращается текущее серверное время.
            </td>
        </tr>
        <tr>
            <td>
                HtmlLiteral (Server)
            </td>
            <td>
                <dot:HtmlLiteral Html="{value: HtmlServer}" />
            </td>
        </tr>
        <tr>
            <td>
                HtmlLiteral (Client AJAX, innerhtml)
            </td>
            <td>
                <input type="button" onclick="loadGridView1()" value="Run">
                <input type="button" onclick="loadGridView2()" value="Run2">
                <script>

                    function loadGridView1() {
                        var xmlhttp = new XMLHttpRequest();
                        var url = "/Examples/OnlyDinamicGridView";

                        xmlhttp.onreadystatechange = function () {
                            if (xmlhttp.readyState == XMLHttpRequest.DONE) { // XMLHttpRequest.DONE == 4
                                if (xmlhttp.status == 200) {
                                    htmlAJAX = document.getElementById("HtmlAJAX");
                                    htmlAJAX.innerHTML = xmlhttp.responseText;
                                }
                                else
                                    console.error(xmlhttp);
                            }
                        };

                        xmlhttp.open("GET", url, true);
                        xmlhttp.send();
                    }

                    function loadGridView2() {

                        var xmlhttp = new XMLHttpRequest(); 

                        var url = "/Examples/OnlyDinamicGridView?CategoryID=2";
                        var params = 'Columns=All';
                        xmlhttp.open('POST', url, true);
                        xmlhttp.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
                        xmlhttp.onreadystatechange = function () {
                            if (xmlhttp.readyState == XMLHttpRequest.DONE) {
                                if (xmlhttp.status == 200) {
                                    htmlAJAX = document.getElementById("HtmlAJAX");
                                    htmlAJAX.innerHTML = xmlhttp.responseText;
                                }
                                else
                                    console.error(xmlhttp);
                            }
                        }
                        xmlhttp.send(params);
                    }

                </script>
                <div ID="HtmlAJAX" />
            </td>
        </tr>
    </table>
</dot:Content>

